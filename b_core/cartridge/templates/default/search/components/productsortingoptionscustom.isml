<iscontent type="text/html" charset="UTF-8" compact="true"/>
<iscomment>
	Displays the product sorting options.
	It expects the name of the key of the pageable in a parameter
    pageable.
</iscomment>

<isscript>

	// determine the ID of the sorting rule used to sort the current search results
	var sortingRule : SortingRule = null;
	if(pdict.productsearchmodel.getSortingRule() != null) {
		sortingRule = pdict.productsearchmodel.getSortingRule();
	}
	else {
		var category : Category = pdict.productsearchmodel.getCategory();
		if (category == null) {
			category = dw.catalog.CatalogMgr.getSiteCatalog().getRoot();
		}
		if (category.getDefaultSortingRule() != null) {
			sortingRule = category.getDefaultSortingRule();
		}
	}
	
	var sortingRuleID : String = null;
	if(sortingRule != null) {
		var sortingOptions : List = dw.catalog.CatalogMgr.getSortingOptions();
		for(var it : Iterator = sortingOptions.iterator(); it.hasNext(); ) {
			var option : SortingOption = it.next();
			if(option.getSortingRule().getID() == sortingRule.getID()) {
				sortingRuleID = sortingRule.getID();
			}
		}
	}
	
	// in case there are multiple elements on a page
	var uniqueId : String = '';
	if (! empty(pdict.uniqueid))
	{
		uniqueId = pdict.uniqueid;
	}
	
</isscript>
<div class="sort-by sort-by-list">
	<isloop items="${dw.catalog.CatalogMgr.getSortingOptions()}" var="SortingOption" status="Status">
		<div class="sort-by-item">
			<a href="${pdict.pagingmodel.appendPaging(pdict.productsearchmodel.urlSortingRule('Search-Show', SortingOption.getSortingRule()),0)}">${SortingOption.getDisplayName()}</a>
		</div>
	</isloop>
</div>
<!-- END: sortby -->